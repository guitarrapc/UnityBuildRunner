name: release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*" # only tag

env:
  BUILD_CONFIG: Release

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: guitarrapc/actions/.github/actions/setup-dotnet@main
        with:
          dotnet-version: |
            6.0.x
            7.0.x
      # tag
      - run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" | tee -a "$GITHUB_ENV"
      # build
      - run: dotnet build -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.GIT_TAG }}
      # pack
      - run: dotnet pack -c ${{ env.BUILD_CONFIG }} -p:Version=${{ env.GIT_TAG }} -o ./pack
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          path: ./pack/

  create-release:
    needs: [build-dotnet]
    runs-on: ubuntu-latest
    steps:
      - uses: guitarrapc/actions/.github/actions/setup-dotnet@main
        with:
          dotnet-version: |
            6.0.x
            7.0.x
      - run: echo "GIT_TAG=${GITHUB_REF#refs/tags/}" | tee -a "$GITHUB_ENV"
      # Create Release
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - uses: actions/download-artifact@v3
      # upload nuget
      - run: dotnet nuget push "./nuget/*.nupkg" --skip-duplicate -s https://www.nuget.org/api/v2/package -k ${{ secrets.SYNCED_NUGET_KEY }}
